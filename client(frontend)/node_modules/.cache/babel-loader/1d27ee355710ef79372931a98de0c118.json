{"ast":null,"code":"import { combineReducers } from 'redux';\n\nconst user = (state = null, action) => {\n  console.log(state);\n\n  switch (action.type) {\n    case \"FETCH_USER\":\n      return action.payload || false;\n\n    default:\n      return state;\n  }\n};\n\nconst INITIAL_USER_STATE = {\n  user: null\n};\n\nconst userData = (state = INITIAL_USER_STATE, action) => {\n  switch (action.type) {\n    case 'FETCH_USER':\n      return { ...state,\n        user: action.payload\n      };\n\n    case 'LOGOUT':\n      return { ...state,\n        user: null\n      };\n\n    default:\n      return state;\n  }\n}; // const INITIAL_PROJECT_STATE = {\n//   projectName: '',\n//   projectNumber: '',\n//   numOfLegends: '',\n//   numOfPages: '',\n//   unit: '',\n//   lineTags: [],\n//   lineTagsRegex: '',\n//   equipmentTags: [],\n//   equipmentTagsRegex: '',\n//   valveTags: [],\n//   valveTagsRegex: '',\n//   instrument: [],\n//   pipingComp: [],\n//   valve: [],\n//   signal: [],\n//   prline: [],\n//   setupProgress: ''\n// }\n// const fetchNewProject = (state=INITIAL_PROJECT_STATE, action) => {\n//   switch(action.type){\n//     case 'UPDATE_PROJECT_BASIC_INFO_DATA':\n//       return {...state,\n//         projectName: action.payload.projectName,\n//         projectNumber: action.payload.projectNumber,\n//         numOfLegends: action.payload.numOfLegends,\n//         numOfPages: action.payload.numOfPages,\n//         unit: action.payload.unit, \n//         setupProgress: 'BASIC_INFO'\n//       }\n//     case 'UPDATE_PROJECT_LINE_TAG_DATA':\n//       return {...state, \n//         lineTags: action.payload.tags,\n//         lineTagsRegex: action.payload.regex\n//       }\n//     case 'UPDATE_PROJECT_EQUIPMENT_TAG_DATA':\n//       return {...state, \n//         equipmentTags: action.payload.tags, \n//         equipmentTagsRegex: action.payload.regex\n//       }\n//     case 'UPDATE_PROJECT_VALVE_TAG_DATA':\n//       return {...state, \n//         valveTags: action.payload.tags,\n//         valveTagsRegex: action.payload.regex\n//       }\n//     case 'UPDATE_PROJECT_SYMBOL_INFO_DATA':\n//       return {...state, \n//         instrument: action.payload.instrument,\n//         pipingComp: action.payload.pipingComp,\n//         valve: action.payload.valve,\n//         signal: action.payload.signal,\n//         prline: action.payload.prline\n//       }\n//     case 'CLEAR_PROJECT_SETUP':\n//         return INITIAL_PROJECT_STATE\n//     default:\n//       return state;\n//   }\n// };\n\n\nexport default combineReducers({\n  user: user // newProject: fetchNewProject\n\n});","map":{"version":3,"sources":["/home/hammad/Development/DaysTech/VitaminLabs-Challenge/ttt-client/src/store/reducer.js"],"names":["combineReducers","user","state","action","console","log","type","payload","INITIAL_USER_STATE","userData"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;;AAEA,MAAMC,IAAI,GAAG,CAACC,KAAK,GAAG,IAAT,EAAeC,MAAf,KAA0B;AACrCC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;;AACA,UAAQC,MAAM,CAACG,IAAf;AACE,SAAK,YAAL;AACE,aAAOH,MAAM,CAACI,OAAP,IAAkB,KAAzB;;AACF;AACE,aAAOL,KAAP;AAJJ;AAMD,CARD;;AAUA,MAAMM,kBAAkB,GAAG;AACzBP,EAAAA,IAAI,EAAE;AADmB,CAA3B;;AAIA,MAAMQ,QAAQ,GAAG,CAACP,KAAK,GAACM,kBAAP,EAA2BL,MAA3B,KAAsC;AACrD,UAAOA,MAAM,CAACG,IAAd;AACE,SAAK,YAAL;AACE,aAAO,EAAC,GAAGJ,KAAJ;AACLD,QAAAA,IAAI,EAAEE,MAAM,CAACI;AADR,OAAP;;AAGF,SAAK,QAAL;AACE,aAAO,EAAC,GAAGL,KAAJ;AACLD,QAAAA,IAAI,EAAE;AADD,OAAP;;AAGF;AACE,aAAOC,KAAP;AAVJ;AAYD,CAbD,C,CAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAIA,eAAeF,eAAe,CAAC;AAC7BC,EAAAA,IAAI,EAAEA,IADuB,CAE7B;;AAF6B,CAAD,CAA9B","sourcesContent":["import { combineReducers } from 'redux';\n\nconst user = (state = null, action) => {\n  console.log(state)\n  switch (action.type) {\n    case \"FETCH_USER\":\n      return action.payload || false;\n    default:\n      return state;\n  }\n}\n\nconst INITIAL_USER_STATE = {\n  user: null\n}\n\nconst userData = (state=INITIAL_USER_STATE, action) => {\n  switch(action.type){\n    case 'FETCH_USER':\n      return {...state,\n        user: action.payload,\n      }\n    case 'LOGOUT':\n      return {...state,\n        user: null\n      }\n    default:\n      return state;\n  }\n};\n\n// const INITIAL_PROJECT_STATE = {\n//   projectName: '',\n//   projectNumber: '',\n//   numOfLegends: '',\n//   numOfPages: '',\n//   unit: '',\n//   lineTags: [],\n//   lineTagsRegex: '',\n//   equipmentTags: [],\n//   equipmentTagsRegex: '',\n//   valveTags: [],\n//   valveTagsRegex: '',\n//   instrument: [],\n//   pipingComp: [],\n//   valve: [],\n//   signal: [],\n//   prline: [],\n\n//   setupProgress: ''\n// }\n\n// const fetchNewProject = (state=INITIAL_PROJECT_STATE, action) => {\n//   switch(action.type){\n//     case 'UPDATE_PROJECT_BASIC_INFO_DATA':\n//       return {...state,\n//         projectName: action.payload.projectName,\n//         projectNumber: action.payload.projectNumber,\n//         numOfLegends: action.payload.numOfLegends,\n//         numOfPages: action.payload.numOfPages,\n//         unit: action.payload.unit, \n//         setupProgress: 'BASIC_INFO'\n//       }\n//     case 'UPDATE_PROJECT_LINE_TAG_DATA':\n//       return {...state, \n//         lineTags: action.payload.tags,\n//         lineTagsRegex: action.payload.regex\n//       }\n//     case 'UPDATE_PROJECT_EQUIPMENT_TAG_DATA':\n//       return {...state, \n//         equipmentTags: action.payload.tags, \n//         equipmentTagsRegex: action.payload.regex\n//       }\n//     case 'UPDATE_PROJECT_VALVE_TAG_DATA':\n//       return {...state, \n//         valveTags: action.payload.tags,\n//         valveTagsRegex: action.payload.regex\n//       }\n//     case 'UPDATE_PROJECT_SYMBOL_INFO_DATA':\n//       return {...state, \n//         instrument: action.payload.instrument,\n//         pipingComp: action.payload.pipingComp,\n//         valve: action.payload.valve,\n//         signal: action.payload.signal,\n//         prline: action.payload.prline\n//       }\n//     case 'CLEAR_PROJECT_SETUP':\n//         return INITIAL_PROJECT_STATE\n//     default:\n//       return state;\n//   }\n// };\n\n\n\nexport default combineReducers({\n  user: user,\n  // newProject: fetchNewProject\n})\n"]},"metadata":{},"sourceType":"module"}