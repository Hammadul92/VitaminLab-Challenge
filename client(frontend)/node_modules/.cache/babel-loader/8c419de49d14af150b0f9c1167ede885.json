{"ast":null,"code":"import { combineReducers } from 'redux';\n\nconst user = (state = null, action) => {\n  console.log(state);\n\n  switch (action.type) {\n    case \"FETCH_USER\":\n      return action.payload || false;\n\n    default:\n      return state;\n  }\n};\n\nconst INITIAL_USER_STATE = {\n  isSignedIn: false,\n  errorMessage: null,\n  userId: null,\n  username: null,\n  email: null,\n  access_token: null,\n  role: null,\n  projects: [],\n  projectsData: [],\n  singleProjectData: null,\n  singleProjectActiveDrawing: null,\n  errorMessageSingleProject: null,\n  singlePdfData: [],\n  products: [],\n  userProducts: [],\n  errorMessageUploadFile: null,\n  checkPdfMessage: false,\n  demoRequestMessage: null,\n  processDrawings: [],\n  blobImage: null,\n  iuiToken: null,\n  datasheet_jwt: null,\n  cadExcel: [],\n  users: [],\n  user: {},\n  allProducts: [],\n  createUserErrorMessage: null,\n  deleteUserMessage: null,\n  createProductErrorMessage: null,\n  singleProduct: null,\n  allProjects: [],\n  createProjectErrorMessage: null,\n  deleteProjectMessage: null\n};\n\nconst userData = (state = INITIAL_USER_STATE, action) => {\n  switch (action.type) {\n    case 'ERROR_MESSAGE':\n      return { ...state,\n        errorMessage: action.payload.errorMessage\n      };\n\n    case 'ERROR_MESSAGE_SINGLE_PROJECT':\n      return { ...state,\n        errorMessageSingleProject: action.payload.errorMessage,\n        singleProjectData: null\n      };\n\n    case 'ERROR_MESSAGE_UPLOAD_FILE':\n      return { ...state,\n        errorMessageUploadFile: action.payload.errorMessage\n      };\n\n    case 'CHECK_PDF_MESSAGE':\n      return { ...state,\n        checkPdfMessage: action.payload.message\n      };\n\n    case 'DEMO_REQUEST_MESSAGE':\n      return { ...state,\n        demoRequestMessage: action.payload.message\n      };\n\n    case 'LOGOUT_USER':\n      return { ...state,\n        isSignedIn: false,\n        errorMessage: null,\n        userId: null,\n        username: null,\n        email: null,\n        access_token: null,\n        role: null,\n        projects: [],\n        projectsData: [],\n        singleProjectData: null,\n        singleProjectActiveDrawing: null,\n        errorMessageSingleProject: null,\n        singlePdfData: [],\n        products: [],\n        userProducts: [],\n        errorMessageUploadFile: null,\n        checkPdfMessage: false,\n        demoRequestMessage: null,\n        processDrawings: [],\n        blobImage: null,\n        iuiToken: null,\n        cadExcel: [],\n        users: [],\n        user: {},\n        allProducts: [],\n        createUserErrorMessage: null,\n        deleteUserMessage: null,\n        createProductErrorMessage: null,\n        singleProduct: null,\n        allProjects: [],\n        createProjectErrorMessage: null,\n        deleteProjectMessage: null\n      };\n\n    case 'LOGIN_USER':\n      return { ...state,\n        errorMessage: null,\n        isSignedIn: true,\n        access_token: action.payload.token,\n        userId: action.payload.id,\n        email: action.payload.email,\n        username: action.payload.name,\n        role: action.payload.role\n      };\n\n    case 'FETCH_IUI_TOKEN':\n      return { ...state,\n        iuiToken: action.payload.iui_token\n      };\n\n    case 'FETCH_PROJECTS_DATA':\n      return { ...state,\n        projectsData: action.payload.projectsData\n      };\n\n    case 'FETCH_PROJECTS':\n      return { ...state,\n        projects: action.payload.projects\n      };\n\n    case 'FETCH_SINGLE_PROJECT_DATA':\n      return { ...state,\n        singleProjectData: action.payload.project\n      };\n\n    case 'FETCH_SINGLE_PDF_DATA':\n      return { ...state,\n        singlePdfData: action.payload.pdf\n      };\n\n    case 'FETCH_SINGLE_PROJECT_ACTIVE_DRAWING':\n      return { ...state,\n        singleProjectActiveDrawing: action.payload.drawing\n      };\n\n    case 'FETCH_USER_PRODUCTS':\n      return { ...state,\n        userProducts: action.payload.userProducts,\n        datasheet_jwt: action.payload.datasheet_jwt\n      };\n\n    case 'FETCH_PRODUCTS':\n      return { ...state,\n        products: action.payload.products\n      };\n\n    case 'PROCESS_DRAWINGS':\n      return { ...state,\n        processDrawings: action.payload.processDrawings\n      };\n\n    case 'FETCH_BLOB_IMAGE':\n      return { ...state,\n        blobImage: action.payload.image\n      };\n\n    case 'FETCH_CAD_EXCEL':\n      return { ...state,\n        cadExcel: action.payload.cadExcel\n      };\n\n    case 'FETCH_USERS':\n      return { ...state,\n        users: action.payload.users\n      };\n\n    case 'FETCH_ALL_PRODUCTS':\n      return { ...state,\n        allProducts: action.payload.allProducts\n      };\n\n    case 'CREATE_USER_ERROR_MESSAGE':\n      return { ...state,\n        createUserErrorMessage: action.payload.errorMessage\n      };\n\n    case 'DELETE_USER_MESSAGE':\n      return { ...state,\n        deleteUserMessage: action.payload.message\n      };\n\n    case 'CREATE_PRODUCT_ERROR_MESSAGE':\n      return { ...state,\n        createProductErrorMessage: action.payload.errorMessage\n      };\n\n    case 'SINGLE_PRODUCT':\n      return { ...state,\n        singleProduct: action.payload.singleProduct\n      };\n\n    case 'FETCH_ALL_PROJECTS':\n      return { ...state,\n        allProjects: action.payload.allProjects\n      };\n\n    case 'CREATE_PROJECT_ERROR_MESSAGE':\n      return { ...state,\n        createProjectErrorMessage: action.payload.errorMessage\n      };\n\n    case 'DELETE_PROJECT_MESSAGE':\n      return { ...state,\n        deleteProjectMessage: action.payload.message\n      };\n\n    default:\n      return state;\n  }\n}; // const INITIAL_PROJECT_STATE = {\n//   projectName: '',\n//   projectNumber: '',\n//   numOfLegends: '',\n//   numOfPages: '',\n//   unit: '',\n//   lineTags: [],\n//   lineTagsRegex: '',\n//   equipmentTags: [],\n//   equipmentTagsRegex: '',\n//   valveTags: [],\n//   valveTagsRegex: '',\n//   instrument: [],\n//   pipingComp: [],\n//   valve: [],\n//   signal: [],\n//   prline: [],\n//   setupProgress: ''\n// }\n// const fetchNewProject = (state=INITIAL_PROJECT_STATE, action) => {\n//   switch(action.type){\n//     case 'UPDATE_PROJECT_BASIC_INFO_DATA':\n//       return {...state,\n//         projectName: action.payload.projectName,\n//         projectNumber: action.payload.projectNumber,\n//         numOfLegends: action.payload.numOfLegends,\n//         numOfPages: action.payload.numOfPages,\n//         unit: action.payload.unit, \n//         setupProgress: 'BASIC_INFO'\n//       }\n//     case 'UPDATE_PROJECT_LINE_TAG_DATA':\n//       return {...state, \n//         lineTags: action.payload.tags,\n//         lineTagsRegex: action.payload.regex\n//       }\n//     case 'UPDATE_PROJECT_EQUIPMENT_TAG_DATA':\n//       return {...state, \n//         equipmentTags: action.payload.tags, \n//         equipmentTagsRegex: action.payload.regex\n//       }\n//     case 'UPDATE_PROJECT_VALVE_TAG_DATA':\n//       return {...state, \n//         valveTags: action.payload.tags,\n//         valveTagsRegex: action.payload.regex\n//       }\n//     case 'UPDATE_PROJECT_SYMBOL_INFO_DATA':\n//       return {...state, \n//         instrument: action.payload.instrument,\n//         pipingComp: action.payload.pipingComp,\n//         valve: action.payload.valve,\n//         signal: action.payload.signal,\n//         prline: action.payload.prline\n//       }\n//     case 'CLEAR_PROJECT_SETUP':\n//         return INITIAL_PROJECT_STATE\n//     default:\n//       return state;\n//   }\n// };\n\n\nexport default combineReducers({\n  user: user // newProject: fetchNewProject\n\n});","map":{"version":3,"sources":["/home/hammad/Development/DaysTech/VitaminLabs-Challenge/ttt-client/src/store/reducer.js"],"names":["combineReducers","user","state","action","console","log","type","payload","INITIAL_USER_STATE","isSignedIn","errorMessage","userId","username","email","access_token","role","projects","projectsData","singleProjectData","singleProjectActiveDrawing","errorMessageSingleProject","singlePdfData","products","userProducts","errorMessageUploadFile","checkPdfMessage","demoRequestMessage","processDrawings","blobImage","iuiToken","datasheet_jwt","cadExcel","users","allProducts","createUserErrorMessage","deleteUserMessage","createProductErrorMessage","singleProduct","allProjects","createProjectErrorMessage","deleteProjectMessage","userData","message","token","id","name","iui_token","project","pdf","drawing","image"],"mappings":"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","sourcesContent":["import { combineReducers } from 'redux';\n\nconst user = (state = null, action) => {\n  console.log(state)\n  switch (action.type) {\n    case \"FETCH_USER\":\n      return action.payload || false;\n    default:\n      return state;\n  }\n}\n\nconst INITIAL_USER_STATE = {\n  isSignedIn: false,\n  errorMessage: null,\n  userId: null,\n  username: null,\n  email: null,\n  access_token: null,\n  role: null,\n  projects: [],\n  projectsData: [],\n  singleProjectData: null,\n  singleProjectActiveDrawing: null,\n  errorMessageSingleProject: null,\n  singlePdfData: [],\n  products: [],\n  userProducts: [],\n  errorMessageUploadFile: null,\n  checkPdfMessage: false,\n  demoRequestMessage: null,\n  processDrawings: [],\n  blobImage: null,\n  iuiToken: null,\n  datasheet_jwt: null,\n  cadExcel: [],\n  users: [],\n  user: {},\n  allProducts: [],\n  createUserErrorMessage: null,\n  deleteUserMessage: null,\n  createProductErrorMessage: null,\n  singleProduct: null,\n  allProjects: [],\n  createProjectErrorMessage: null,\n  deleteProjectMessage: null,\n}\n\nconst userData = (state=INITIAL_USER_STATE, action) => {\n  switch(action.type){\n    case 'ERROR_MESSAGE':\n      return {...state,\n        errorMessage: action.payload.errorMessage,\n      }\n    case 'ERROR_MESSAGE_SINGLE_PROJECT':\n        return {...state,\n          errorMessageSingleProject: action.payload.errorMessage,\n          singleProjectData: null\n        }\n    case 'ERROR_MESSAGE_UPLOAD_FILE':\n        return {...state,\n          errorMessageUploadFile: action.payload.errorMessage\n        }\n    case 'CHECK_PDF_MESSAGE':\n        return {...state,\n            checkPdfMessage: action.payload.message\n        }\n    case 'DEMO_REQUEST_MESSAGE':\n        return{...state,\n          demoRequestMessage: action.payload.message\n        }\n    case 'LOGOUT_USER':\n      return {...state,\n        isSignedIn: false,\n        errorMessage: null,\n        userId: null,\n        username: null,\n        email: null,\n        access_token: null,\n        role: null,\n        projects: [],\n        projectsData: [],\n        singleProjectData: null,\n        singleProjectActiveDrawing: null,\n        errorMessageSingleProject: null,\n        singlePdfData: [],\n        products: [],\n        userProducts: [],\n        errorMessageUploadFile: null,\n        checkPdfMessage: false,\n        demoRequestMessage: null,\n        processDrawings: [],\n        blobImage: null,\n        iuiToken: null,\n        cadExcel: [],\n        users: [],\n        user: {},\n        allProducts: [],\n        createUserErrorMessage: null,\n        deleteUserMessage: null,\n        createProductErrorMessage: null,\n        singleProduct: null,\n        allProjects: [],\n        createProjectErrorMessage: null,\n        deleteProjectMessage: null,\n      }\n    case 'LOGIN_USER':\n      return {...state,\n        errorMessage: null,\n        isSignedIn: true,\n        access_token: action.payload.token,\n        userId: action.payload.id,\n        email: action.payload.email,\n        username: action.payload.name,\n        role: action.payload.role\n      }\n    case 'FETCH_IUI_TOKEN':\n      return {...state,\n        iuiToken: action.payload.iui_token\n      }\n    \n    case 'FETCH_PROJECTS_DATA':\n      return {...state,\n        projectsData: action.payload.projectsData\n      }\n    case 'FETCH_PROJECTS':\n      return {...state,\n        projects: action.payload.projects\n      }\n    case 'FETCH_SINGLE_PROJECT_DATA':\n      return {...state,\n        singleProjectData: action.payload.project\n      }\n    case 'FETCH_SINGLE_PDF_DATA':\n      return {...state,\n          singlePdfData: action.payload.pdf\n      }\n    case 'FETCH_SINGLE_PROJECT_ACTIVE_DRAWING':\n      return{...state,\n        singleProjectActiveDrawing: action.payload.drawing\n      }\n    case 'FETCH_USER_PRODUCTS':\n      return {...state, \n        userProducts: action.payload.userProducts,\n        datasheet_jwt: action.payload.datasheet_jwt\n      }\n    case 'FETCH_PRODUCTS':\n        return {...state, \n          products: action.payload.products\n        }\n    case 'PROCESS_DRAWINGS':\n      return {...state, \n        processDrawings: action.payload.processDrawings\n      }\n    case 'FETCH_BLOB_IMAGE':\n      return {...state, blobImage: action.payload.image}\n    case 'FETCH_CAD_EXCEL':\n      return {...state, cadExcel: action.payload.cadExcel}\n    case 'FETCH_USERS':\n      return {...state, users: action.payload.users}\n\n    case 'FETCH_ALL_PRODUCTS':\n      return {...state, allProducts: action.payload.allProducts}\n    case 'CREATE_USER_ERROR_MESSAGE':\n      return {...state, createUserErrorMessage: action.payload.errorMessage}\n    case 'DELETE_USER_MESSAGE':\n      return {...state, deleteUserMessage: action.payload.message}\n    case 'CREATE_PRODUCT_ERROR_MESSAGE':\n      return {...state, createProductErrorMessage: action.payload.errorMessage}\n    case 'SINGLE_PRODUCT':\n      return {...state, singleProduct: action.payload.singleProduct}\n    case 'FETCH_ALL_PROJECTS':\n      return {...state, allProjects: action.payload.allProjects}\n    case 'CREATE_PROJECT_ERROR_MESSAGE':\n      return {...state, createProjectErrorMessage: action.payload.errorMessage}\n    case 'DELETE_PROJECT_MESSAGE':\n      return {...state, deleteProjectMessage: action.payload.message}\n    default:\n      return state;\n  }\n};\n\n// const INITIAL_PROJECT_STATE = {\n//   projectName: '',\n//   projectNumber: '',\n//   numOfLegends: '',\n//   numOfPages: '',\n//   unit: '',\n//   lineTags: [],\n//   lineTagsRegex: '',\n//   equipmentTags: [],\n//   equipmentTagsRegex: '',\n//   valveTags: [],\n//   valveTagsRegex: '',\n//   instrument: [],\n//   pipingComp: [],\n//   valve: [],\n//   signal: [],\n//   prline: [],\n\n//   setupProgress: ''\n// }\n\n// const fetchNewProject = (state=INITIAL_PROJECT_STATE, action) => {\n//   switch(action.type){\n//     case 'UPDATE_PROJECT_BASIC_INFO_DATA':\n//       return {...state,\n//         projectName: action.payload.projectName,\n//         projectNumber: action.payload.projectNumber,\n//         numOfLegends: action.payload.numOfLegends,\n//         numOfPages: action.payload.numOfPages,\n//         unit: action.payload.unit, \n//         setupProgress: 'BASIC_INFO'\n//       }\n//     case 'UPDATE_PROJECT_LINE_TAG_DATA':\n//       return {...state, \n//         lineTags: action.payload.tags,\n//         lineTagsRegex: action.payload.regex\n//       }\n//     case 'UPDATE_PROJECT_EQUIPMENT_TAG_DATA':\n//       return {...state, \n//         equipmentTags: action.payload.tags, \n//         equipmentTagsRegex: action.payload.regex\n//       }\n//     case 'UPDATE_PROJECT_VALVE_TAG_DATA':\n//       return {...state, \n//         valveTags: action.payload.tags,\n//         valveTagsRegex: action.payload.regex\n//       }\n//     case 'UPDATE_PROJECT_SYMBOL_INFO_DATA':\n//       return {...state, \n//         instrument: action.payload.instrument,\n//         pipingComp: action.payload.pipingComp,\n//         valve: action.payload.valve,\n//         signal: action.payload.signal,\n//         prline: action.payload.prline\n//       }\n//     case 'CLEAR_PROJECT_SETUP':\n//         return INITIAL_PROJECT_STATE\n//     default:\n//       return state;\n//   }\n// };\n\n\n\nexport default combineReducers({\n  user: user,\n  // newProject: fetchNewProject\n})\n"]},"metadata":{},"sourceType":"module"}