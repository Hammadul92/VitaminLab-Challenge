{"ast":null,"code":"import api from '../apis';\nexport const loginUser = (email, password) => async dispatch => {\n  try {\n    const response = await api.get('/login', {\n      params: {\n        email: email,\n        password: password\n      }\n    });\n    dispatch({\n      type: 'FETCH_USER',\n      payload: response.data\n    });\n  } catch (error) {\n    if (error.response.status === 401) {\n      dispatch({\n        type: 'FETCH_USER',\n        payload: error.response.data\n      });\n    }\n  }\n};\nexport const Logout = () => async dispatch => {\n  dispatch({\n    type: 'LOGOUT'\n  });\n};\nexport const fetchProducts = access_token => async dispatch => {\n  try {\n    const response = await api.get('/products', {\n      headers: {\n        Authorization: `JWT ${access_token}`\n      }\n    });\n    dispatch({\n      type: 'FETCH_PRODUCTS',\n      payload: response.data\n    });\n  } catch (error) {\n    if (error.response.status === 401) {\n      dispatch({\n        type: 'LOGOUT'\n      });\n    }\n  }\n};\nexport const addProduct = (formData, access_token) => async dispatch => {\n  try {\n    const response = await api.post(`/products`, formData, {\n      headers: {\n        Authorization: `JWT ${access_token}`\n      }\n    });\n    dispatch({\n      type: 'ADD_PRODUCT',\n      payload: response.data\n    });\n  } catch (error) {\n    if (error.response.status === 401) {\n      dispatch({\n        type: 'LOGOUT_USER'\n      });\n    } else if (error.response.status === 409) {\n      dispatch({\n        type: 'ADD_PRODUCT',\n        payload: error.response.data\n      });\n    }\n  }\n};\nexport const updateProduct = (id, formData, access_token) => async dispatch => {\n  try {\n    const response = await api.put(`/products/${id}`, formData, {\n      headers: {\n        Authorization: `JWT ${access_token}`\n      }\n    });\n    dispatch({\n      type: 'UPDATE_PRODUCT',\n      payload: response.data\n    });\n  } catch (error) {\n    if (error.response.status === 401) {\n      dispatch({\n        type: 'LOGOUT'\n      });\n    } else if (error.response.status === 409) {\n      dispatch({\n        type: 'UPDATE_PRODUCT',\n        payload: error.response.data\n      });\n    }\n  }\n};\nexport const deleteProduct = (id, access_token) => async dispatch => {\n  try {\n    await api.delete(`/products/${id}`, {\n      headers: {\n        Authorization: `JWT ${access_token}`\n      }\n    });\n  } catch (error) {\n    if (error.response.status === 401) {\n      dispatch({\n        type: 'LOGOUT'\n      });\n    }\n  }\n};\nexport const fetchProduct = (id, access_token) => async dispatch => {\n  try {\n    const response = await api.get(`/products/${id}`, {\n      headers: {\n        Authorization: `JWT ${access_token}`\n      }\n    });\n    dispatch({\n      type: 'FETCH_PRODUCT',\n      payload: response.data\n    });\n  } catch (error) {\n    if (error.response.status === 401) {\n      dispatch({\n        type: 'LOGOUT_USER'\n      });\n    } else if (error.response.status === 404) {\n      dispatch({\n        type: 'FETCH_PRODUCT',\n        payload: error.response.data\n      });\n    }\n  }\n};\nexport const fetchCADExcel = (formData, access_token) => async dispatch => {\n  try {\n    const response = await api.post('/api/cad-excel/', formData, {\n      headers: {\n        Authorization: `JWT ${access_token}`\n      }\n    });\n    dispatch({\n      type: 'FETCH_CAD_EXCEL',\n      payload: response.data\n    });\n  } catch (error) {\n    if (error.response.status === 401) {\n      dispatch({\n        type: 'LOGOUT_USER'\n      });\n    }\n  }\n};\nexport const fetchSinglePdfData = (projectId, pdfName, access_token) => async dispatch => {\n  try {\n    const response = await api.post('/api/single-pdf-data/', {\n      projectId: projectId,\n      pdfName: pdfName\n    }, {\n      headers: {\n        Authorization: `JWT ${access_token}`\n      }\n    });\n    dispatch({\n      type: 'FETCH_SINGLE_PDF_DATA',\n      payload: response.data\n    });\n  } catch (error) {\n    if (error.response.status === 401) {\n      dispatch({\n        type: 'LOGOUT_USER'\n      });\n    } else if (error.response.status === 404) {\n      dispatch({\n        type: 'ERROR_MESSAGE_SINGLE_PDF',\n        payload: error.response.data\n      });\n    }\n  }\n};\nexport const fetchSingleProjectDrawing = (projectId, drawingId, access_token) => async dispatch => {\n  try {\n    const response = await api.post('/api/project-drawing/', {\n      projectId: projectId,\n      drawingId: drawingId\n    }, {\n      headers: {\n        Authorization: `JWT ${access_token}`\n      }\n    });\n    dispatch({\n      type: 'FETCH_SINGLE_PROJECT_ACTIVE_DRAWING',\n      payload: response.data\n    });\n  } catch (error) {\n    if (error.response.status === 401) {\n      dispatch({\n        type: 'LOGOUT_USER'\n      });\n    }\n  }\n};\nexport const uploadFile = (formData, access_token) => async dispatch => {\n  try {\n    const response = await api.post('/api/upload-file/', formData, {\n      headers: {\n        Authorization: `JWT ${access_token}`\n      }\n    });\n    dispatch({\n      type: 'ERROR_MESSAGE_UPLOAD_FILE',\n      payload: response.data\n    });\n  } catch (error) {\n    if (error.response.status === 401) {\n      dispatch({\n        type: 'LOGOUT_USER'\n      });\n    } else if (error.response.status === 500) {\n      dispatch({\n        type: 'ERROR_MESSAGE_UPLOAD_FILE',\n        payload: error.response.data\n      });\n    }\n  }\n};\nexport const checkPdf = (formData, access_token) => async dispatch => {\n  try {\n    const response = await api.post('/api/check-pdf/', formData, {\n      headers: {\n        Authorization: `JWT ${access_token}`\n      }\n    });\n    dispatch({\n      type: 'CHECK_PDF_MESSAGE',\n      payload: response.data\n    });\n  } catch (error) {\n    if (error.response.status === 401) {\n      dispatch({\n        type: 'LOGOUT_USER'\n      });\n    }\n  }\n};\nexport const archiveProject = (formData, access_token) => async dispatch => {\n  try {\n    await api.post('/api/archive-project/', formData, {\n      headers: {\n        Authorization: `JWT ${access_token}`\n      }\n    });\n  } catch (error) {\n    if (error.response.status === 401) {\n      dispatch({\n        type: 'LOGOUT_USER'\n      });\n    }\n  }\n};\nexport const processDrawings = (formData, access_token) => async dispatch => {\n  try {\n    const response = await api.post('/api/process-drawings/', formData, {\n      headers: {\n        Authorization: `JWT ${access_token}`\n      }\n    });\n    dispatch({\n      type: 'PROCESS_DRAWINGS',\n      payload: response.data\n    });\n  } catch (error) {\n    if (error.response.status === 401) {\n      dispatch({\n        type: 'LOGOUT_USER'\n      });\n    }\n  }\n};\nexport const updateProcessDrawings = (formData, access_token) => async dispatch => {\n  try {\n    const response = await api.post('/api/update-process-drawings/', formData, {\n      headers: {\n        Authorization: `JWT ${access_token}`\n      }\n    });\n    dispatch({\n      type: 'PROCESS_DRAWINGS',\n      payload: response.data\n    });\n  } catch (error) {\n    if (error.response.status === 401) {\n      dispatch({\n        type: 'LOGOUT_USER'\n      });\n    }\n  }\n};\nexport const applyCustomization = (formData, access_token) => async dispatch => {\n  try {\n    await api.post('/api/apply-customization/', formData, {\n      headers: {\n        Authorization: `JWT ${access_token}`\n      }\n    });\n  } catch (error) {\n    if (error.response.status === 401) {\n      dispatch({\n        type: 'LOGOUT_USER'\n      });\n    }\n  }\n};\nexport const fetchImage = (formData, access_token) => async dispatch => {\n  try {\n    const response = await api.post('/api/image/', formData, {\n      headers: {\n        Authorization: `JWT ${access_token}`\n      }\n    });\n    dispatch({\n      type: 'FETCH_BLOB_IMAGE',\n      payload: response.data\n    });\n  } catch (error) {\n    if (error.response.status === 401) {\n      dispatch({\n        type: 'LOGOUT_USER'\n      });\n    }\n  }\n};\nexport const updateUser = (formData, access_token) => async dispatch => {\n  try {\n    await api.post('/api/update-user/', formData, {\n      headers: {\n        Authorization: `JWT ${access_token}`\n      }\n    });\n  } catch (error) {\n    if (error.response.status === 401) {\n      dispatch({\n        type: 'LOGOUT_USER'\n      });\n    }\n  }\n};\nexport const createUser = (formData, access_token) => async dispatch => {\n  try {\n    const response = await api.post('/api/create-user/', formData, {\n      headers: {\n        Authorization: `JWT ${access_token}`\n      }\n    });\n    dispatch({\n      type: 'CREATE_USER_ERROR_MESSAGE',\n      payload: response.data\n    });\n  } catch (error) {\n    if (error.response.status === 401) {\n      dispatch({\n        type: 'LOGOUT_USER'\n      });\n    }\n  }\n};\nexport const deleteUser = (formData, access_token) => async dispatch => {\n  try {\n    const response = await api.post('/api/delete-user/', formData, {\n      headers: {\n        Authorization: `JWT ${access_token}`\n      }\n    });\n    dispatch({\n      type: 'DELETE_USER_MESSAGE',\n      payload: response.data\n    });\n  } catch (error) {\n    if (error.response.status === 401) {\n      dispatch({\n        type: 'LOGOUT_USER'\n      });\n    }\n  }\n};\nexport const fetchAllProjects = access_token => async dispatch => {\n  try {\n    const response = await api.get('/api/all-projects/', {\n      headers: {\n        Authorization: `JWT ${access_token}`\n      }\n    });\n    dispatch({\n      type: 'FETCH_ALL_PROJECTS',\n      payload: response.data\n    });\n  } catch (error) {\n    if (error.response.status === 401) {\n      dispatch({\n        type: 'LOGOUT_USER'\n      });\n    }\n  }\n};\nexport const fetchSingleProject = (formData, access_token) => async dispatch => {\n  try {\n    const response = await api.post('/api/fetch-project/', formData, {\n      headers: {\n        Authorization: `JWT ${access_token}`\n      }\n    });\n    dispatch({\n      type: 'FETCH_SINGLE_PROJECT_DATA',\n      payload: response.data\n    });\n  } catch (error) {\n    if (error.response.status === 401) {\n      dispatch({\n        type: 'LOGOUT_USER'\n      });\n    } else if (error.response.status === 404) {\n      dispatch({\n        type: 'ERROR_MESSAGE_SINGLE_PROJECT',\n        payload: error.response.data\n      });\n    }\n  }\n};\nexport const createProject = (formData, access_token) => async dispatch => {\n  try {\n    const response = await api.post('/api/create-project/', formData, {\n      headers: {\n        Authorization: `JWT ${access_token}`\n      }\n    });\n    dispatch({\n      type: 'CREATE_PROJECT_ERROR_MESSAGE',\n      payload: response.data\n    });\n  } catch (error) {\n    if (error.response.status === 401) {\n      dispatch({\n        type: 'LOGOUT_USER'\n      });\n    }\n  }\n};\nexport const deleteProject = (formData, access_token) => async dispatch => {\n  try {\n    const response = await api.post('/api/delete-project/', formData, {\n      headers: {\n        Authorization: `JWT ${access_token}`\n      }\n    });\n    dispatch({\n      type: 'DELETE_PROJECT_MESSAGE',\n      payload: response.data\n    });\n  } catch (error) {\n    if (error.response.status === 401) {\n      dispatch({\n        type: 'LOGOUT_USER'\n      });\n    }\n  }\n}; // export const updateProjectBasicInfoData = (data) => async (dispatch) => {\n//   dispatch({type: \"UPDATE_PROJECT_BASIC_INFO_DATA\", payload: data})\n// }\n// export const updateProjectLineTagData = (data) => async (dispatch) => {\n//   dispatch({type: \"UPDATE_PROJECT_LINE_TAG_DATA\", payload: data});\n// }\n// export const updateProjectEquipmentTagData = (data) => async (dispatch) => {\n//   dispatch({type: \"UPDATE_PROJECT_EQUIPMENT_TAG_DATA\", payload: data});\n// }\n// export const updateProjectValveTagData = (data) => async (dispatch) => {\n//   dispatch({type: \"UPDATE_PROJECT_VALVE_TAG_DATA\", payload: data});\n// }\n// export const updateProjectSymbolInfoData = (data) => async (dispatch) => {\n//   dispatch({type: 'UPDATE_PROJECT_SYMBOL_INFO_DATA', payload: data})\n// }\n// export const clearProjectSetup = () => async (dispatch) => {\n//   dispatch({type: \"CLEAR_PROJECT_SETUP\", payload: {}})\n// }","map":{"version":3,"sources":["/home/hammad/Development/DaysTech/VitaminLabs-Challenge/client/src/store/actions.js"],"names":["api","loginUser","email","password","dispatch","response","get","params","type","payload","data","error","status","Logout","fetchProducts","access_token","headers","Authorization","addProduct","formData","post","updateProduct","id","put","deleteProduct","delete","fetchProduct","fetchCADExcel","fetchSinglePdfData","projectId","pdfName","fetchSingleProjectDrawing","drawingId","uploadFile","checkPdf","archiveProject","processDrawings","updateProcessDrawings","applyCustomization","fetchImage","updateUser","createUser","deleteUser","fetchAllProjects","fetchSingleProject","createProject","deleteProject"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,SAAhB;AAEA,OAAO,MAAMC,SAAS,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAOC,QAAP,IAAoB;AAChE,MAAG;AACD,UAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAJ,CAAQ,QAAR,EAAkB;AAAEC,MAAAA,MAAM,EAAE;AAAEL,QAAAA,KAAK,EAAEA,KAAT;AAAgBC,QAAAA,QAAQ,EAAEA;AAA1B;AAAV,KAAlB,CAAvB;AACAC,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAE,YAAR;AAAsBC,MAAAA,OAAO,EAAEJ,QAAQ,CAACK;AAAxC,KAAD,CAAR;AACD,GAHD,CAGC,OAAMC,KAAN,EAAY;AACX,QAAGA,KAAK,CAACN,QAAN,CAAeO,MAAf,KAA0B,GAA7B,EAAiC;AAC/BR,MAAAA,QAAQ,CAAC;AAACI,QAAAA,IAAI,EAAE,YAAP;AAAqBC,QAAAA,OAAO,EAAEE,KAAK,CAACN,QAAN,CAAeK;AAA7C,OAAD,CAAR;AACD;AACF;AACF,CATM;AAWP,OAAO,MAAMG,MAAM,GAAG,MAAM,MAAOT,QAAP,IAAoB;AAC9CA,EAAAA,QAAQ,CAAC;AAACI,IAAAA,IAAI,EAAE;AAAP,GAAD,CAAR;AACD,CAFM;AAKP,OAAO,MAAMM,aAAa,GAAIC,YAAD,IAAkB,MAAOX,QAAP,IAAoB;AACjE,MAAG;AACD,UAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAJ,CAAQ,WAAR,EAAqB;AAACU,MAAAA,OAAO,EAAE;AAACC,QAAAA,aAAa,EAAG,OAAMF,YAAa;AAApC;AAAV,KAArB,CAAvB;AACAX,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAE,gBAAR;AAA0BC,MAAAA,OAAO,EAAEJ,QAAQ,CAACK;AAA5C,KAAD,CAAR;AACD,GAHD,CAGC,OAAMC,KAAN,EAAY;AACT,QAAGA,KAAK,CAACN,QAAN,CAAeO,MAAf,KAA0B,GAA7B,EAAiC;AAC7BR,MAAAA,QAAQ,CAAC;AAACI,QAAAA,IAAI,EAAE;AAAP,OAAD,CAAR;AACH;AACJ;AACF,CATM;AAWP,OAAO,MAAMU,UAAU,GAAG,CAACC,QAAD,EAAWJ,YAAX,KAA4B,MAAOX,QAAP,IAAoB;AACxE,MAAG;AACD,UAAMC,QAAQ,GAAG,MAAML,GAAG,CAACoB,IAAJ,CAAU,WAAV,EAAsBD,QAAtB,EAAgC;AAACH,MAAAA,OAAO,EAAE;AAACC,QAAAA,aAAa,EAAG,OAAMF,YAAa;AAApC;AAAV,KAAhC,CAAvB;AACAX,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAE,aAAR;AAAuBC,MAAAA,OAAO,EAAEJ,QAAQ,CAACK;AAAzC,KAAD,CAAR;AACD,GAHD,CAGC,OAAMC,KAAN,EAAY;AACT,QAAGA,KAAK,CAACN,QAAN,CAAeO,MAAf,KAA0B,GAA7B,EAAiC;AAC7BR,MAAAA,QAAQ,CAAC;AAACI,QAAAA,IAAI,EAAE;AAAP,OAAD,CAAR;AACH,KAFD,MAEM,IAAGG,KAAK,CAACN,QAAN,CAAeO,MAAf,KAA0B,GAA7B,EAAiC;AACrCR,MAAAA,QAAQ,CAAC;AAACI,QAAAA,IAAI,EAAE,aAAP;AAAsBC,QAAAA,OAAO,EAAEE,KAAK,CAACN,QAAN,CAAeK;AAA9C,OAAD,CAAR;AACD;AACJ;AACF,CAXM;AAaP,OAAO,MAAMW,aAAa,GAAG,CAACC,EAAD,EAAKH,QAAL,EAAeJ,YAAf,KAAiC,MAAOX,QAAP,IAAoB;AAChF,MAAG;AACD,UAAMC,QAAQ,GAAG,MAAML,GAAG,CAACuB,GAAJ,CAAS,aAAYD,EAAG,EAAxB,EACvBH,QADuB,EAEvB;AAACH,MAAAA,OAAO,EAAE;AAACC,QAAAA,aAAa,EAAG,OAAMF,YAAa;AAApC;AAAV,KAFuB,CAAvB;AAIAX,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAE,gBAAR;AAA0BC,MAAAA,OAAO,EAAEJ,QAAQ,CAACK;AAA5C,KAAD,CAAR;AACD,GAND,CAMC,OAAMC,KAAN,EAAY;AACX,QAAGA,KAAK,CAACN,QAAN,CAAeO,MAAf,KAA0B,GAA7B,EAAiC;AAC/BR,MAAAA,QAAQ,CAAC;AAACI,QAAAA,IAAI,EAAE;AAAP,OAAD,CAAR;AACD,KAFD,MAEM,IAAGG,KAAK,CAACN,QAAN,CAAeO,MAAf,KAA0B,GAA7B,EAAiC;AACrCR,MAAAA,QAAQ,CAAC;AAACI,QAAAA,IAAI,EAAE,gBAAP;AAAyBC,QAAAA,OAAO,EAAEE,KAAK,CAACN,QAAN,CAAeK;AAAjD,OAAD,CAAR;AACD;AACF;AACF,CAdM;AAgBP,OAAO,MAAMc,aAAa,GAAG,CAACF,EAAD,EAAKP,YAAL,KAAsB,MAAOX,QAAP,IAAoB;AACrE,MAAG;AACD,UAAMJ,GAAG,CAACyB,MAAJ,CAAY,aAAYH,EAAG,EAA3B,EAA8B;AAACN,MAAAA,OAAO,EAAE;AAACC,QAAAA,aAAa,EAAG,OAAMF,YAAa;AAApC;AAAV,KAA9B,CAAN;AACD,GAFD,CAEC,OAAMJ,KAAN,EAAY;AACT,QAAGA,KAAK,CAACN,QAAN,CAAeO,MAAf,KAA0B,GAA7B,EAAiC;AAC7BR,MAAAA,QAAQ,CAAC;AAACI,QAAAA,IAAI,EAAE;AAAP,OAAD,CAAR;AACH;AACJ;AACF,CARM;AAUP,OAAO,MAAMkB,YAAY,GAAG,CAACJ,EAAD,EAAKP,YAAL,KAAsB,MAAOX,QAAP,IAAoB;AACpE,MAAG;AACD,UAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAJ,CAAS,aAAYgB,EAAG,EAAxB,EAA2B;AAACN,MAAAA,OAAO,EAAE;AAACC,QAAAA,aAAa,EAAG,OAAMF,YAAa;AAApC;AAAV,KAA3B,CAAvB;AACAX,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAE,eAAR;AAAyBC,MAAAA,OAAO,EAAEJ,QAAQ,CAACK;AAA3C,KAAD,CAAR;AACD,GAHD,CAGC,OAAMC,KAAN,EAAY;AACT,QAAGA,KAAK,CAACN,QAAN,CAAeO,MAAf,KAA0B,GAA7B,EAAiC;AAC7BR,MAAAA,QAAQ,CAAC;AAACI,QAAAA,IAAI,EAAE;AAAP,OAAD,CAAR;AACH,KAFD,MAEM,IAAGG,KAAK,CAACN,QAAN,CAAeO,MAAf,KAA0B,GAA7B,EAAiC;AACrCR,MAAAA,QAAQ,CAAC;AAACI,QAAAA,IAAI,EAAE,eAAP;AAAwBC,QAAAA,OAAO,EAAEE,KAAK,CAACN,QAAN,CAAeK;AAAhD,OAAD,CAAR;AACD;AACJ;AACF,CAXM;AAoBP,OAAO,MAAMiB,aAAa,GAAG,CAACR,QAAD,EAAWJ,YAAX,KAA4B,MAAOX,QAAP,IAAoB;AAC3E,MAAG;AACD,UAAMC,QAAQ,GAAG,MAAML,GAAG,CAACoB,IAAJ,CAAS,iBAAT,EAA4BD,QAA5B,EAAsC;AAACH,MAAAA,OAAO,EAAE;AAACC,QAAAA,aAAa,EAAG,OAAMF,YAAa;AAApC;AAAV,KAAtC,CAAvB;AACAX,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAE,iBAAR;AAA2BC,MAAAA,OAAO,EAAEJ,QAAQ,CAACK;AAA7C,KAAD,CAAR;AACD,GAHD,CAGC,OAAMC,KAAN,EAAY;AACT,QAAGA,KAAK,CAACN,QAAN,CAAeO,MAAf,KAA0B,GAA7B,EAAiC;AAC7BR,MAAAA,QAAQ,CAAC;AAACI,QAAAA,IAAI,EAAE;AAAP,OAAD,CAAR;AACH;AACJ;AACF,CATM;AAYP,OAAO,MAAMoB,kBAAkB,GAAG,CAACC,SAAD,EAAYC,OAAZ,EAAqBf,YAArB,KAAsC,MAAOX,QAAP,IAAoB;AAC1F,MAAG;AACD,UAAMC,QAAQ,GAAG,MAAML,GAAG,CAACoB,IAAJ,CAAS,uBAAT,EAAkC;AAACS,MAAAA,SAAS,EAAEA,SAAZ;AAAuBC,MAAAA,OAAO,EAAEA;AAAhC,KAAlC,EAA4E;AAACd,MAAAA,OAAO,EAAE;AAACC,QAAAA,aAAa,EAAG,OAAMF,YAAa;AAApC;AAAV,KAA5E,CAAvB;AACAX,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAE,uBAAR;AAAiCC,MAAAA,OAAO,EAAEJ,QAAQ,CAACK;AAAnD,KAAD,CAAR;AACD,GAHD,CAGC,OAAMC,KAAN,EAAY;AACP,QAAGA,KAAK,CAACN,QAAN,CAAeO,MAAf,KAA0B,GAA7B,EAAiC;AAC7BR,MAAAA,QAAQ,CAAC;AAACI,QAAAA,IAAI,EAAE;AAAP,OAAD,CAAR;AACH,KAFD,MAEM,IAAGG,KAAK,CAACN,QAAN,CAAeO,MAAf,KAA0B,GAA7B,EAAiC;AACnCR,MAAAA,QAAQ,CAAC;AAACI,QAAAA,IAAI,EAAE,0BAAP;AAAmCC,QAAAA,OAAO,EAAEE,KAAK,CAACN,QAAN,CAAeK;AAA3D,OAAD,CAAR;AACH;AACN;AACF,CAXM;AAaP,OAAO,MAAMqB,yBAAyB,GAAG,CAACF,SAAD,EAAYG,SAAZ,EAAuBjB,YAAvB,KAAwC,MAAOX,QAAP,IAAoB;AACnG,MAAG;AACD,UAAMC,QAAQ,GAAG,MAAML,GAAG,CAACoB,IAAJ,CAAS,uBAAT,EAAkC;AAACS,MAAAA,SAAS,EAAEA,SAAZ;AAAuBG,MAAAA,SAAS,EAAEA;AAAlC,KAAlC,EAAgF;AAAChB,MAAAA,OAAO,EAAE;AAACC,QAAAA,aAAa,EAAG,OAAMF,YAAa;AAApC;AAAV,KAAhF,CAAvB;AACAX,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAE,qCAAR;AAA+CC,MAAAA,OAAO,EAAEJ,QAAQ,CAACK;AAAjE,KAAD,CAAR;AACD,GAHD,CAGC,OAAMC,KAAN,EAAY;AACP,QAAGA,KAAK,CAACN,QAAN,CAAeO,MAAf,KAA0B,GAA7B,EAAiC;AAC7BR,MAAAA,QAAQ,CAAC;AAACI,QAAAA,IAAI,EAAE;AAAP,OAAD,CAAR;AACH;AACN;AACF,CATM;AAYP,OAAO,MAAMyB,UAAU,GAAG,CAACd,QAAD,EAAWJ,YAAX,KAA4B,MAAOX,QAAP,IAAoB;AACxE,MAAG;AACD,UAAMC,QAAQ,GAAG,MAAML,GAAG,CAACoB,IAAJ,CAAS,mBAAT,EAA8BD,QAA9B,EAAwC;AAACH,MAAAA,OAAO,EAAE;AAACC,QAAAA,aAAa,EAAG,OAAMF,YAAa;AAApC;AAAV,KAAxC,CAAvB;AACAX,IAAAA,QAAQ,CAAC;AAACI,MAAAA,IAAI,EAAE,2BAAP;AAAoCC,MAAAA,OAAO,EAAEJ,QAAQ,CAACK;AAAtD,KAAD,CAAR;AACD,GAHD,CAGC,OAAMC,KAAN,EAAY;AACP,QAAGA,KAAK,CAACN,QAAN,CAAeO,MAAf,KAA0B,GAA7B,EAAiC;AAC7BR,MAAAA,QAAQ,CAAC;AAACI,QAAAA,IAAI,EAAE;AAAP,OAAD,CAAR;AACH,KAFD,MAEM,IAAGG,KAAK,CAACN,QAAN,CAAeO,MAAf,KAA0B,GAA7B,EAAiC;AACnCR,MAAAA,QAAQ,CAAC;AAACI,QAAAA,IAAI,EAAE,2BAAP;AAAoCC,QAAAA,OAAO,EAAEE,KAAK,CAACN,QAAN,CAAeK;AAA5D,OAAD,CAAR;AACH;AACN;AACF,CAXM;AAaP,OAAO,MAAMwB,QAAQ,GAAG,CAACf,QAAD,EAAWJ,YAAX,KAA4B,MAAOX,QAAP,IAAoB;AACtE,MAAG;AACD,UAAMC,QAAQ,GAAG,MAAML,GAAG,CAACoB,IAAJ,CAAS,iBAAT,EAA4BD,QAA5B,EAAsC;AAACH,MAAAA,OAAO,EAAE;AAACC,QAAAA,aAAa,EAAG,OAAMF,YAAa;AAApC;AAAV,KAAtC,CAAvB;AACAX,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAE,mBAAR;AAA6BC,MAAAA,OAAO,EAAEJ,QAAQ,CAACK;AAA/C,KAAD,CAAR;AACD,GAHD,CAGC,OAAMC,KAAN,EAAY;AACX,QAAGA,KAAK,CAACN,QAAN,CAAeO,MAAf,KAA0B,GAA7B,EAAiC;AAC7BR,MAAAA,QAAQ,CAAC;AAACI,QAAAA,IAAI,EAAE;AAAP,OAAD,CAAR;AACH;AACF;AACF,CATM;AAYP,OAAO,MAAM2B,cAAc,GAAG,CAAChB,QAAD,EAAWJ,YAAX,KAA4B,MAAOX,QAAP,IAAoB;AAC5E,MAAG;AACD,UAAMJ,GAAG,CAACoB,IAAJ,CAAS,uBAAT,EAAkCD,QAAlC,EAA4C;AAACH,MAAAA,OAAO,EAAE;AAACC,QAAAA,aAAa,EAAG,OAAMF,YAAa;AAApC;AAAV,KAA5C,CAAN;AACD,GAFD,CAEC,OAAMJ,KAAN,EAAY;AACT,QAAGA,KAAK,CAACN,QAAN,CAAeO,MAAf,KAA0B,GAA7B,EAAiC;AAC7BR,MAAAA,QAAQ,CAAC;AAACI,QAAAA,IAAI,EAAE;AAAP,OAAD,CAAR;AACH;AACJ;AACF,CARM;AAWP,OAAO,MAAM4B,eAAe,GAAG,CAACjB,QAAD,EAAWJ,YAAX,KAA4B,MAAOX,QAAP,IAAoB;AAC7E,MAAG;AACD,UAAMC,QAAQ,GAAG,MAAML,GAAG,CAACoB,IAAJ,CAAS,wBAAT,EAAmCD,QAAnC,EAA6C;AAACH,MAAAA,OAAO,EAAE;AAACC,QAAAA,aAAa,EAAG,OAAMF,YAAa;AAApC;AAAV,KAA7C,CAAvB;AACAX,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAE,kBAAR;AAA4BC,MAAAA,OAAO,EAAEJ,QAAQ,CAACK;AAA9C,KAAD,CAAR;AACD,GAHD,CAGC,OAAMC,KAAN,EAAY;AACP,QAAGA,KAAK,CAACN,QAAN,CAAeO,MAAf,KAA0B,GAA7B,EAAiC;AAC7BR,MAAAA,QAAQ,CAAC;AAACI,QAAAA,IAAI,EAAE;AAAP,OAAD,CAAR;AACH;AACN;AACF,CATM;AAWP,OAAO,MAAM6B,qBAAqB,GAAG,CAAClB,QAAD,EAAWJ,YAAX,KAA4B,MAAOX,QAAP,IAAoB;AACnF,MAAG;AACD,UAAMC,QAAQ,GAAG,MAAML,GAAG,CAACoB,IAAJ,CAAS,+BAAT,EAA0CD,QAA1C,EAAoD;AAACH,MAAAA,OAAO,EAAE;AAACC,QAAAA,aAAa,EAAG,OAAMF,YAAa;AAApC;AAAV,KAApD,CAAvB;AACAX,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAE,kBAAR;AAA4BC,MAAAA,OAAO,EAAEJ,QAAQ,CAACK;AAA9C,KAAD,CAAR;AACD,GAHD,CAGC,OAAMC,KAAN,EAAY;AACP,QAAGA,KAAK,CAACN,QAAN,CAAeO,MAAf,KAA0B,GAA7B,EAAiC;AAC7BR,MAAAA,QAAQ,CAAC;AAACI,QAAAA,IAAI,EAAE;AAAP,OAAD,CAAR;AACH;AACN;AACF,CATM;AAWP,OAAO,MAAM8B,kBAAkB,GAAG,CAACnB,QAAD,EAAWJ,YAAX,KAA4B,MAAOX,QAAP,IAAoB;AAChF,MAAG;AACD,UAAMJ,GAAG,CAACoB,IAAJ,CAAS,2BAAT,EAAsCD,QAAtC,EAAgD;AAACH,MAAAA,OAAO,EAAE;AAACC,QAAAA,aAAa,EAAG,OAAMF,YAAa;AAApC;AAAV,KAAhD,CAAN;AACD,GAFD,CAEC,OAAMJ,KAAN,EAAY;AACP,QAAGA,KAAK,CAACN,QAAN,CAAeO,MAAf,KAA0B,GAA7B,EAAiC;AAC7BR,MAAAA,QAAQ,CAAC;AAACI,QAAAA,IAAI,EAAE;AAAP,OAAD,CAAR;AACH;AACN;AACF,CARM;AAUP,OAAO,MAAM+B,UAAU,GAAG,CAACpB,QAAD,EAAWJ,YAAX,KAA4B,MAAOX,QAAP,IAAoB;AACxE,MAAG;AACF,UAAMC,QAAQ,GAAG,MAAML,GAAG,CAACoB,IAAJ,CAAS,aAAT,EAAwBD,QAAxB,EAAkC;AAACH,MAAAA,OAAO,EAAE;AAACC,QAAAA,aAAa,EAAG,OAAMF,YAAa;AAApC;AAAV,KAAlC,CAAvB;AACCX,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAE,kBAAR;AAA4BC,MAAAA,OAAO,EAAEJ,QAAQ,CAACK;AAA9C,KAAD,CAAR;AACD,GAHD,CAGC,OAAMC,KAAN,EAAY;AACX,QAAGA,KAAK,CAACN,QAAN,CAAeO,MAAf,KAA0B,GAA7B,EAAiC;AAC7BR,MAAAA,QAAQ,CAAC;AAACI,QAAAA,IAAI,EAAE;AAAP,OAAD,CAAR;AACH;AACF;AACF,CATM;AAcP,OAAO,MAAMgC,UAAU,GAAG,CAACrB,QAAD,EAAWJ,YAAX,KAA4B,MAAOX,QAAP,IAAoB;AACxE,MAAG;AACD,UAAMJ,GAAG,CAACoB,IAAJ,CAAS,mBAAT,EAA8BD,QAA9B,EAAwC;AAACH,MAAAA,OAAO,EAAE;AAACC,QAAAA,aAAa,EAAG,OAAMF,YAAa;AAApC;AAAV,KAAxC,CAAN;AACD,GAFD,CAEC,OAAMJ,KAAN,EAAY;AACX,QAAGA,KAAK,CAACN,QAAN,CAAeO,MAAf,KAA0B,GAA7B,EAAiC;AAC7BR,MAAAA,QAAQ,CAAC;AAACI,QAAAA,IAAI,EAAE;AAAP,OAAD,CAAR;AACH;AACF;AACF,CARM;AAYP,OAAO,MAAMiC,UAAU,GAAG,CAACtB,QAAD,EAAWJ,YAAX,KAA4B,MAAOX,QAAP,IAAoB;AACxE,MAAG;AACD,UAAMC,QAAQ,GAAG,MAAML,GAAG,CAACoB,IAAJ,CAAS,mBAAT,EAA8BD,QAA9B,EAAwC;AAACH,MAAAA,OAAO,EAAE;AAACC,QAAAA,aAAa,EAAG,OAAMF,YAAa;AAApC;AAAV,KAAxC,CAAvB;AACAX,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAE,2BAAR;AAAqCC,MAAAA,OAAO,EAAEJ,QAAQ,CAACK;AAAvD,KAAD,CAAR;AACD,GAHD,CAGC,OAAMC,KAAN,EAAY;AACX,QAAGA,KAAK,CAACN,QAAN,CAAeO,MAAf,KAA0B,GAA7B,EAAiC;AAC7BR,MAAAA,QAAQ,CAAC;AAACI,QAAAA,IAAI,EAAE;AAAP,OAAD,CAAR;AACH;AACF;AACF,CATM;AAWP,OAAO,MAAMkC,UAAU,GAAG,CAACvB,QAAD,EAAWJ,YAAX,KAA4B,MAAOX,QAAP,IAAoB;AACxE,MAAG;AACD,UAAMC,QAAQ,GAAG,MAAML,GAAG,CAACoB,IAAJ,CAAS,mBAAT,EAA8BD,QAA9B,EAAwC;AAACH,MAAAA,OAAO,EAAE;AAACC,QAAAA,aAAa,EAAG,OAAMF,YAAa;AAApC;AAAV,KAAxC,CAAvB;AACAX,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAE,qBAAR;AAA+BC,MAAAA,OAAO,EAAEJ,QAAQ,CAACK;AAAjD,KAAD,CAAR;AACD,GAHD,CAGC,OAAMC,KAAN,EAAY;AACX,QAAGA,KAAK,CAACN,QAAN,CAAeO,MAAf,KAA0B,GAA7B,EAAiC;AAC7BR,MAAAA,QAAQ,CAAC;AAACI,QAAAA,IAAI,EAAE;AAAP,OAAD,CAAR;AACH;AACF;AACF,CATM;AAcP,OAAO,MAAMmC,gBAAgB,GAAI5B,YAAD,IAAkB,MAAOX,QAAP,IAAoB;AACpE,MAAG;AACD,UAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAJ,CAAQ,oBAAR,EAA8B;AAACU,MAAAA,OAAO,EAAE;AAACC,QAAAA,aAAa,EAAG,OAAMF,YAAa;AAApC;AAAV,KAA9B,CAAvB;AACAX,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAE,oBAAR;AAA8BC,MAAAA,OAAO,EAAEJ,QAAQ,CAACK;AAAhD,KAAD,CAAR;AACD,GAHD,CAGC,OAAMC,KAAN,EAAY;AACX,QAAGA,KAAK,CAACN,QAAN,CAAeO,MAAf,KAA0B,GAA7B,EAAiC;AAC7BR,MAAAA,QAAQ,CAAC;AAACI,QAAAA,IAAI,EAAE;AAAP,OAAD,CAAR;AACH;AACF;AACF,CATM;AAWP,OAAO,MAAMoC,kBAAkB,GAAG,CAACzB,QAAD,EAAWJ,YAAX,KAA4B,MAAOX,QAAP,IAAoB;AAChF,MAAG;AACD,UAAMC,QAAQ,GAAG,MAAML,GAAG,CAACoB,IAAJ,CAAS,qBAAT,EAAgCD,QAAhC,EAA0C;AAACH,MAAAA,OAAO,EAAE;AAACC,QAAAA,aAAa,EAAG,OAAMF,YAAa;AAApC;AAAV,KAA1C,CAAvB;AACAX,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAE,2BAAR;AAAqCC,MAAAA,OAAO,EAAEJ,QAAQ,CAACK;AAAvD,KAAD,CAAR;AACD,GAHD,CAGC,OAAMC,KAAN,EAAY;AACP,QAAGA,KAAK,CAACN,QAAN,CAAeO,MAAf,KAA0B,GAA7B,EAAiC;AAC7BR,MAAAA,QAAQ,CAAC;AAACI,QAAAA,IAAI,EAAE;AAAP,OAAD,CAAR;AACH,KAFD,MAEM,IAAGG,KAAK,CAACN,QAAN,CAAeO,MAAf,KAA0B,GAA7B,EAAiC;AACnCR,MAAAA,QAAQ,CAAC;AAACI,QAAAA,IAAI,EAAE,8BAAP;AAAuCC,QAAAA,OAAO,EAAEE,KAAK,CAACN,QAAN,CAAeK;AAA/D,OAAD,CAAR;AACH;AACN;AACF,CAXM;AAcP,OAAO,MAAMmC,aAAa,GAAG,CAAC1B,QAAD,EAAWJ,YAAX,KAA4B,MAAOX,QAAP,IAAoB;AAC3E,MAAG;AACD,UAAMC,QAAQ,GAAG,MAAML,GAAG,CAACoB,IAAJ,CAAS,sBAAT,EAAiCD,QAAjC,EAA2C;AAACH,MAAAA,OAAO,EAAE;AAACC,QAAAA,aAAa,EAAG,OAAMF,YAAa;AAApC;AAAV,KAA3C,CAAvB;AACAX,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAE,8BAAR;AAAwCC,MAAAA,OAAO,EAAEJ,QAAQ,CAACK;AAA1D,KAAD,CAAR;AACD,GAHD,CAGC,OAAMC,KAAN,EAAY;AACX,QAAGA,KAAK,CAACN,QAAN,CAAeO,MAAf,KAA0B,GAA7B,EAAiC;AAC7BR,MAAAA,QAAQ,CAAC;AAACI,QAAAA,IAAI,EAAE;AAAP,OAAD,CAAR;AACH;AACF;AACF,CATM;AAWP,OAAO,MAAMsC,aAAa,GAAG,CAAC3B,QAAD,EAAWJ,YAAX,KAA4B,MAAOX,QAAP,IAAoB;AAC3E,MAAG;AACD,UAAMC,QAAQ,GAAG,MAAML,GAAG,CAACoB,IAAJ,CAAS,sBAAT,EAAiCD,QAAjC,EAA2C;AAACH,MAAAA,OAAO,EAAE;AAACC,QAAAA,aAAa,EAAG,OAAMF,YAAa;AAApC;AAAV,KAA3C,CAAvB;AACAX,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAE,wBAAR;AAAkCC,MAAAA,OAAO,EAAEJ,QAAQ,CAACK;AAApD,KAAD,CAAR;AACD,GAHD,CAGC,OAAMC,KAAN,EAAY;AACX,QAAGA,KAAK,CAACN,QAAN,CAAeO,MAAf,KAA0B,GAA7B,EAAiC;AAC7BR,MAAAA,QAAQ,CAAC;AAACI,QAAAA,IAAI,EAAE;AAAP,OAAD,CAAR;AACH;AACF;AACF,CATM,C,CAkBP;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA","sourcesContent":["import api from '../apis';\n\nexport const loginUser = (email, password) => async (dispatch) => {\n  try{\n    const response = await api.get('/login', { params: { email: email, password: password } });\n    dispatch({ type: 'FETCH_USER', payload: response.data})\n  }catch(error){\n    if(error.response.status === 401){\n      dispatch({type: 'FETCH_USER', payload: error.response.data})\n    }\n  } \n}\n\nexport const Logout = () => async (dispatch) => {\n  dispatch({type: 'LOGOUT'});\n};\n\n\nexport const fetchProducts = (access_token) => async (dispatch) => {\n  try{\n    const response = await api.get('/products', {headers: {Authorization: `JWT ${access_token}`}});\n    dispatch({ type: 'FETCH_PRODUCTS', payload: response.data})\n  }catch(error){\n      if(error.response.status === 401){\n          dispatch({type: 'LOGOUT'});\n      }\n  }\n}\n\nexport const addProduct = (formData, access_token) => async (dispatch) => {\n  try{\n    const response = await api.post(`/products`, formData, {headers: {Authorization: `JWT ${access_token}`}});\n    dispatch({ type: 'ADD_PRODUCT', payload: response.data})\n  }catch(error){\n      if(error.response.status === 401){\n          dispatch({type: 'LOGOUT_USER'});\n      }else if(error.response.status === 409){\n        dispatch({type: 'ADD_PRODUCT', payload: error.response.data})\n      }\n  }\n}\n\nexport const updateProduct = (id, formData, access_token ) => async (dispatch) => {\n  try{\n    const response = await api.put(`/products/${id}`, \n    formData, \n    {headers: {Authorization: `JWT ${access_token}`}});\n\n    dispatch({ type: 'UPDATE_PRODUCT', payload: response.data})\n  }catch(error){\n    if(error.response.status === 401){\n      dispatch({type: 'LOGOUT'})\n    }else if(error.response.status === 409){\n      dispatch({type: 'UPDATE_PRODUCT', payload: error.response.data})\n    }\n  } \n}\n\nexport const deleteProduct = (id, access_token) => async (dispatch) => {\n  try{\n    await api.delete(`/products/${id}`, {headers: {Authorization: `JWT ${access_token}`}});\n  }catch(error){\n      if(error.response.status === 401){\n          dispatch({type: 'LOGOUT'});\n      }\n  }\n}\n\nexport const fetchProduct = (id, access_token) => async (dispatch) => {\n  try{\n    const response = await api.get(`/products/${id}`, {headers: {Authorization: `JWT ${access_token}`}});\n    dispatch({ type: 'FETCH_PRODUCT', payload: response.data})\n  }catch(error){\n      if(error.response.status === 401){\n          dispatch({type: 'LOGOUT_USER'});\n      }else if(error.response.status === 404){\n        dispatch({type: 'FETCH_PRODUCT', payload: error.response.data})\n      }\n  }\n}\n\n\n\n\n\n\n\n\nexport const fetchCADExcel = (formData, access_token) => async (dispatch) => {\n  try{\n    const response = await api.post('/api/cad-excel/', formData, {headers: {Authorization: `JWT ${access_token}`}});\n    dispatch({ type: 'FETCH_CAD_EXCEL', payload: response.data})\n  }catch(error){\n      if(error.response.status === 401){\n          dispatch({type: 'LOGOUT_USER'});\n      }\n  }\n}\n\n\nexport const fetchSinglePdfData = (projectId, pdfName, access_token) => async (dispatch) => {\n  try{\n    const response = await api.post('/api/single-pdf-data/', {projectId: projectId, pdfName: pdfName}, {headers: {Authorization: `JWT ${access_token}`}});\n    dispatch({ type: 'FETCH_SINGLE_PDF_DATA', payload: response.data})\n  }catch(error){\n        if(error.response.status === 401){\n            dispatch({type: 'LOGOUT_USER'});\n        }else if(error.response.status === 404){\n            dispatch({type: 'ERROR_MESSAGE_SINGLE_PDF', payload: error.response.data})\n        }\n  }\n}\n\nexport const fetchSingleProjectDrawing = (projectId, drawingId, access_token) => async (dispatch) => {\n  try{\n    const response = await api.post('/api/project-drawing/', {projectId: projectId, drawingId: drawingId}, {headers: {Authorization: `JWT ${access_token}`}});\n    dispatch({ type: 'FETCH_SINGLE_PROJECT_ACTIVE_DRAWING', payload: response.data})\n  }catch(error){\n        if(error.response.status === 401){\n            dispatch({type: 'LOGOUT_USER'});\n        }\n  }\n}\n\n\nexport const uploadFile = (formData, access_token) => async (dispatch) => {\n  try{\n    const response = await api.post('/api/upload-file/', formData, {headers: {Authorization: `JWT ${access_token}`}});\n    dispatch({type: 'ERROR_MESSAGE_UPLOAD_FILE', payload: response.data}); \n  }catch(error){\n        if(error.response.status === 401){\n            dispatch({type: 'LOGOUT_USER'});\n        }else if(error.response.status === 500){\n            dispatch({type: 'ERROR_MESSAGE_UPLOAD_FILE', payload: error.response.data})\n        }\n  }\n}\n\nexport const checkPdf = (formData, access_token) => async (dispatch) => {\n  try{\n    const response = await api.post('/api/check-pdf/', formData, {headers: {Authorization: `JWT ${access_token}`}}); \n    dispatch({ type: 'CHECK_PDF_MESSAGE', payload: response.data})\n  }catch(error){\n    if(error.response.status === 401){\n        dispatch({type: 'LOGOUT_USER'});\n    }\n  }\n}\n\n\nexport const archiveProject = (formData, access_token) => async (dispatch) => {\n  try{\n    await api.post('/api/archive-project/', formData, {headers: {Authorization: `JWT ${access_token}`}}); \n  }catch(error){\n      if(error.response.status === 401){\n          dispatch({type: 'LOGOUT_USER'});\n      }\n  }\n}\n\n\nexport const processDrawings = (formData, access_token) => async (dispatch) => {\n  try{\n    const response = await api.post('/api/process-drawings/', formData, {headers: {Authorization: `JWT ${access_token}`}});\n    dispatch({ type: 'PROCESS_DRAWINGS', payload: response.data})\n  }catch(error){\n        if(error.response.status === 401){\n            dispatch({type: 'LOGOUT_USER'});\n        }\n  }\n}\n\nexport const updateProcessDrawings = (formData, access_token) => async (dispatch) => {\n  try{\n    const response = await api.post('/api/update-process-drawings/', formData, {headers: {Authorization: `JWT ${access_token}`}});\n    dispatch({ type: 'PROCESS_DRAWINGS', payload: response.data})\n  }catch(error){\n        if(error.response.status === 401){\n            dispatch({type: 'LOGOUT_USER'});\n        }\n  }\n}\n\nexport const applyCustomization = (formData, access_token) => async (dispatch) => {\n  try{\n    await api.post('/api/apply-customization/', formData, {headers: {Authorization: `JWT ${access_token}`}});\n  }catch(error){\n        if(error.response.status === 401){\n            dispatch({type: 'LOGOUT_USER'});\n        }\n  }\n}\n\nexport const fetchImage = (formData, access_token) => async (dispatch) => {\n  try{\n   const response = await api.post('/api/image/', formData, {headers: {Authorization: `JWT ${access_token}`}});\n    dispatch({ type: 'FETCH_BLOB_IMAGE', payload: response.data})\n  }catch(error){\n    if(error.response.status === 401){\n        dispatch({type: 'LOGOUT_USER'});\n    }\n  }\n}\n\n\n\n\nexport const updateUser = (formData, access_token) => async (dispatch) => {\n  try{\n    await api.post('/api/update-user/', formData, {headers: {Authorization: `JWT ${access_token}`}});\n  }catch(error){\n    if(error.response.status === 401){\n        dispatch({type: 'LOGOUT_USER'});\n    }\n  }\n}\n\n\n\nexport const createUser = (formData, access_token) => async (dispatch) => {\n  try{\n    const response = await api.post('/api/create-user/', formData, {headers: {Authorization: `JWT ${access_token}`}});\n    dispatch({ type: 'CREATE_USER_ERROR_MESSAGE', payload: response.data})\n  }catch(error){\n    if(error.response.status === 401){\n        dispatch({type: 'LOGOUT_USER'});\n    }\n  }\n}\n\nexport const deleteUser = (formData, access_token) => async (dispatch) => {\n  try{\n    const response = await api.post('/api/delete-user/', formData, {headers: {Authorization: `JWT ${access_token}`}});\n    dispatch({ type: 'DELETE_USER_MESSAGE', payload: response.data})\n  }catch(error){\n    if(error.response.status === 401){\n        dispatch({type: 'LOGOUT_USER'});\n    }\n  }\n}\n\n\n\n\nexport const fetchAllProjects = (access_token) => async (dispatch) => {\n  try{\n    const response = await api.get('/api/all-projects/', {headers: {Authorization: `JWT ${access_token}`}});\n    dispatch({ type: 'FETCH_ALL_PROJECTS', payload: response.data})\n  }catch(error){\n    if(error.response.status === 401){\n        dispatch({type: 'LOGOUT_USER'});\n    }\n  }\n}\n\nexport const fetchSingleProject = (formData, access_token) => async (dispatch) => {\n  try{\n    const response = await api.post('/api/fetch-project/', formData, {headers: {Authorization: `JWT ${access_token}`}});\n    dispatch({ type: 'FETCH_SINGLE_PROJECT_DATA', payload: response.data})\n  }catch(error){\n        if(error.response.status === 401){\n            dispatch({type: 'LOGOUT_USER'});\n        }else if(error.response.status === 404){\n            dispatch({type: 'ERROR_MESSAGE_SINGLE_PROJECT', payload: error.response.data})\n        }\n  }\n}\n\n\nexport const createProject = (formData, access_token) => async (dispatch) => {\n  try{\n    const response = await api.post('/api/create-project/', formData, {headers: {Authorization: `JWT ${access_token}`}});\n    dispatch({ type: 'CREATE_PROJECT_ERROR_MESSAGE', payload: response.data})\n  }catch(error){\n    if(error.response.status === 401){\n        dispatch({type: 'LOGOUT_USER'});\n    }\n  }\n}\n\nexport const deleteProject = (formData, access_token) => async (dispatch) => {\n  try{\n    const response = await api.post('/api/delete-project/', formData, {headers: {Authorization: `JWT ${access_token}`}});\n    dispatch({ type: 'DELETE_PROJECT_MESSAGE', payload: response.data})\n  }catch(error){\n    if(error.response.status === 401){\n        dispatch({type: 'LOGOUT_USER'});\n    }\n  }\n}\n\n\n\n\n\n\n\n\n// export const updateProjectBasicInfoData = (data) => async (dispatch) => {\n//   dispatch({type: \"UPDATE_PROJECT_BASIC_INFO_DATA\", payload: data})\n// }\n\n// export const updateProjectLineTagData = (data) => async (dispatch) => {\n//   dispatch({type: \"UPDATE_PROJECT_LINE_TAG_DATA\", payload: data});\n// }\n\n// export const updateProjectEquipmentTagData = (data) => async (dispatch) => {\n//   dispatch({type: \"UPDATE_PROJECT_EQUIPMENT_TAG_DATA\", payload: data});\n// }\n\n// export const updateProjectValveTagData = (data) => async (dispatch) => {\n//   dispatch({type: \"UPDATE_PROJECT_VALVE_TAG_DATA\", payload: data});\n// }\n\n// export const updateProjectSymbolInfoData = (data) => async (dispatch) => {\n//   dispatch({type: 'UPDATE_PROJECT_SYMBOL_INFO_DATA', payload: data})\n// }\n\n\n// export const clearProjectSetup = () => async (dispatch) => {\n//   dispatch({type: \"CLEAR_PROJECT_SETUP\", payload: {}})\n// }"]},"metadata":{},"sourceType":"module"}