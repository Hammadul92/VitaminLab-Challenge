{"ast":null,"code":"import { combineReducers } from 'redux';\nconst INITIAL_USER_STATE = {\n  user: null,\n  products: [],\n  product: null,\n  new_product: null\n};\n\nconst Data = (state = INITIAL_USER_STATE, action) => {\n  switch (action.type) {\n    case 'FETCH_USER':\n      return { ...state,\n        user: action.payload\n      };\n\n    case 'FETCH_PRODUCTS':\n      return { ...state,\n        products: action.payload\n      };\n\n    case 'FETCH_PRODUCT':\n      return { ...state,\n        product: action.payload\n      };\n\n    case 'ADD_PRODUCT':\n      return { ...state,\n        new_product: action.payload\n      };\n\n    case 'LOGOUT':\n      return { ...state,\n        user: null,\n        products: [],\n        product: null,\n        new_product: null\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  Data: Data\n});","map":{"version":3,"sources":["/home/hammad/Development/DaysTech/VitaminLabs-Challenge/ttt-client/src/store/reducer.js"],"names":["combineReducers","INITIAL_USER_STATE","user","products","product","new_product","Data","state","action","type","payload"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AAEA,MAAMC,kBAAkB,GAAG;AACzBC,EAAAA,IAAI,EAAE,IADmB;AAEzBC,EAAAA,QAAQ,EAAE,EAFe;AAGzBC,EAAAA,OAAO,EAAE,IAHgB;AAIzBC,EAAAA,WAAW,EAAE;AAJY,CAA3B;;AAOA,MAAMC,IAAI,GAAG,CAACC,KAAK,GAACN,kBAAP,EAA2BO,MAA3B,KAAsC;AACjD,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,YAAL;AACE,aAAO,EAAC,GAAGF,KAAJ;AACLL,QAAAA,IAAI,EAAEM,MAAM,CAACE;AADR,OAAP;;AAGF,SAAK,gBAAL;AACE,aAAO,EAAC,GAAGH,KAAJ;AACLJ,QAAAA,QAAQ,EAAEK,MAAM,CAACE;AADZ,OAAP;;AAGF,SAAK,eAAL;AACE,aAAO,EAAC,GAAGH,KAAJ;AACLH,QAAAA,OAAO,EAAEI,MAAM,CAACE;AADX,OAAP;;AAGF,SAAK,aAAL;AACE,aAAO,EAAC,GAAGH,KAAJ;AACLF,QAAAA,WAAW,EAAEG,MAAM,CAACE;AADf,OAAP;;AAGF,SAAK,QAAL;AACE,aAAO,EAAC,GAAGH,KAAJ;AACLL,QAAAA,IAAI,EAAE,IADD;AAELC,QAAAA,QAAQ,EAAE,EAFL;AAGLC,QAAAA,OAAO,EAAE,IAHJ;AAILC,QAAAA,WAAW,EAAE;AAJR,OAAP;;AAMF;AACE,aAAOE,KAAP;AAzBJ;AA2BD,CA5BD;;AA+BA,eAAeP,eAAe,CAAC;AAC7BM,EAAAA,IAAI,EAAEA;AADuB,CAAD,CAA9B","sourcesContent":["import { combineReducers } from 'redux';\n\nconst INITIAL_USER_STATE = {\n  user: null,\n  products: [],\n  product: null,\n  new_product: null,\n}\n\nconst Data = (state=INITIAL_USER_STATE, action) => {\n  switch(action.type){\n    case 'FETCH_USER':\n      return {...state,\n        user: action.payload,\n      }\n    case 'FETCH_PRODUCTS':\n      return {...state,\n        products: action.payload,\n      }\n    case 'FETCH_PRODUCT':\n      return {...state,\n        product: action.payload,\n      }\n    case 'ADD_PRODUCT':\n      return {...state,\n        new_product: action.payload,\n      }\n    case 'LOGOUT':\n      return {...state,\n        user: null,\n        products: [],\n        product: null,\n        new_product: null\n      }\n    default:\n      return state;\n  }\n};\n\n\nexport default combineReducers({\n  Data: Data,\n})\n"]},"metadata":{},"sourceType":"module"}